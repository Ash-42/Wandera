[{"/home/srihebbar/Desktop/Wandera/client/src/index.js":"1","/home/srihebbar/Desktop/Wandera/client/src/App.js":"2","/home/srihebbar/Desktop/Wandera/client/src/pages/Signup.js":"3","/home/srihebbar/Desktop/Wandera/client/src/pages/Home.js":"4","/home/srihebbar/Desktop/Wandera/client/src/pages/Account.js":"5","/home/srihebbar/Desktop/Wandera/client/src/pages/Forum.js":"6","/home/srihebbar/Desktop/Wandera/client/src/pages/Main.js":"7","/home/srihebbar/Desktop/Wandera/client/src/pages/Login.js":"8","/home/srihebbar/Desktop/Wandera/client/src/pages/Post.js":"9","/home/srihebbar/Desktop/Wandera/client/src/components/NavbarMain.js":"10","/home/srihebbar/Desktop/Wandera/client/src/components/Albums.js":"11","/home/srihebbar/Desktop/Wandera/client/src/components/About.js":"12","/home/srihebbar/Desktop/Wandera/client/src/components/NavbarProf.js":"13"},{"size":248,"mtime":1606872071922,"results":"14","hashOfConfig":"15"},{"size":884,"mtime":1606871970526,"results":"16","hashOfConfig":"15"},{"size":4646,"mtime":1606867978442,"results":"17","hashOfConfig":"15"},{"size":1062,"mtime":1606734857156,"results":"18","hashOfConfig":"15"},{"size":396,"mtime":1606784632043,"results":"19","hashOfConfig":"15"},{"size":337,"mtime":1606751203664,"results":"20","hashOfConfig":"15"},{"size":332,"mtime":1607158987615,"results":"21","hashOfConfig":"15"},{"size":2531,"mtime":1607000120364,"results":"22","hashOfConfig":"15"},{"size":4021,"mtime":1607158987615,"results":"23","hashOfConfig":"15"},{"size":728,"mtime":1606784561249,"results":"24","hashOfConfig":"15"},{"size":722,"mtime":1606733580643,"results":"25","hashOfConfig":"15"},{"size":815,"mtime":1606733570850,"results":"26","hashOfConfig":"15"},{"size":734,"mtime":1606784556185,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1f9gp31",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/srihebbar/Desktop/Wandera/client/src/index.js",[],["56","57"],"/home/srihebbar/Desktop/Wandera/client/src/App.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Signup.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Home.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Account.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Forum.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Main.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Login.js",[],"/home/srihebbar/Desktop/Wandera/client/src/pages/Post.js",["58","59","60","61"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from '../components/NavbarProf';\nimport \"./Post.css\";\n\n\n/* We get a third-party to host images and use a URL string to\nreference the image in order to display it on webpages */\n\n/* Cloudinary auxiliary data */\nconst CL_CLOUD_NAME = \"histor1an0\";\nconst CL_PRESET = \"new-wandera\";\nconst CL_UPLOAD_URL = \"https://api.cloudinary.com/v1_1/histor1an0/image/upload\";\n\nconst Post = () => {\n    const history = useHistory();\n    const [heading, setHeading] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [URL, setURL] = useState(\"\");\n\n    // we need to make the post request to create post on server only\n    // when the photo has been posted on the cloud and as a result the url has been changed.\n    // useEffect(() => {\n    //     const fetchRoute = () => {\n    //         console.log(URL);\n    //         if(URL) {\n    //             fetch('/createpost', {\n    //                 method: \"post\",\n    //                 headers: {\n    //                     \"Content-Type\":\"application/json\"\n    //                 },\n    //                 body: JSON.stringify({\n    //                     title: heading,\n    //                     body: body,\n    //                     photo: URL\n    //                 })\n    //             })\n    //             .then(res => res.json())\n    //             .then(data => {\n    //                 if(data.error) console.log(`Error! ${data.error}`);\n    //                 else history.push('/account');\n    //             })\n    //             .catch((err)=>{\n    //                 alert(\"Error in fetching route: \", err);\n    //             });\n    //         }\n    //     };\n    //     fetchRoute();\n    // }, [heading, body, history, URL]);\n\n    const PostAlbum = () => {\n        /* Upload image files using FormData to the cloud */\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"upload_preset\", CL_PRESET);\n        formData.append(\"cloud_name\", CL_CLOUD_NAME);\n\n        const options = {\n            method: 'POST',\n            mors: \"cors\",\n            body: formData\n        };\n\n        console.log(image);\n\n        return fetch(CL_UPLOAD_URL, options)\n        .then(res => {\n            console.log(res);\n            console.log(`Response URL: ${res.url}`);\n            // res.json();\n            // console.log(`After - response: ${res}`);\n        })\n        .then(res => {\n            /* URL is the key in the returned data \n            when the image has been successfuly uploaded. */\n            // setURL(`URL and secure URL: ${data}`);\n            // console.log(res);\n            alert(\"Success!\");\n        })\n        .catch(err => {\n            console.log(\"Error in uploading image: \" + err);\n            alert(\"Error in uploading image. Stop.\");\n        });\n    };\n\n    return (\n    <div className=\"post-landing\">\n        <Navbar />\n        <div className=\"post-page\">\n            <div className='post-container'>\n                <h2>Create your Album</h2>\n                <form className=\"post-form\" action='#'>\n                    <div className=\"post-input\">\n                        <input type=\"text\" name='post-heading' value={heading} onChange={(e) => {setHeading(e.target.value)}} placeholder=\"Heading\" required/>\n                        <textarea rows=\"5\" cols=\"10\" name=\"post-body\" maxLength=\"50\" wrap=\"hard\" value={body} onChange={(e) => {setBody(e.target.value)}} placeholder=\"Body\"></textarea>\n                        <div className=\"file-input\">\n                            <span>Upload Image</span>\n                            <input type=\"file\" onChange={(e) => {setImage(e.target.files[0])}} required/>\n                        </div>\n                        <button className=\"post-button\" \n                        onClick={\n                            (e) => {\n                                e.preventDefault(); \n                                PostAlbum();\n                            }\n                        }>POST ALBUM</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default Post;","/home/srihebbar/Desktop/Wandera/client/src/components/NavbarMain.js",[],"/home/srihebbar/Desktop/Wandera/client/src/components/Albums.js",[],"/home/srihebbar/Desktop/Wandera/client/src/components/About.js",[],"/home/srihebbar/Desktop/Wandera/client/src/components/NavbarProf.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":26,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"70","line":16,"column":11,"nodeType":"68","messageId":"69","endLine":16,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":20,"column":12,"nodeType":"68","messageId":"69","endLine":20,"endColumn":15},{"ruleId":"66","severity":1,"message":"72","line":20,"column":17,"nodeType":"68","messageId":"69","endLine":20,"endColumn":23},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'URL' is assigned a value but never used.","'setURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
